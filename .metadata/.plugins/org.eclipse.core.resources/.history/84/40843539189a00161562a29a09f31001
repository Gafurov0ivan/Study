package com.gafur.homework.week_3.annotations;

import java.lang.annotation.Annotation;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

public class Tester {

	public void testAll(String[] classes) {

		for (String item : classes) {
//			Class<Test> obj = Test.class;
			
				try {
					Class<?> obj = Class.forName(item);
					for (Method method : obj.getDeclaredMethods()) {
					if (method.isAnnotationPresent(Test.class)) {
							Annotation annotation = method.getAnnotation(Test.class);
							Test test = (Test) annotation;
							System.out.println(method.invoke(obj.newInstance(), 15));
					}
					}
				} catch (SecurityException e) {
					e.printStackTrace();
				} catch (IllegalAccessException e) {
					e.printStackTrace();
				} catch (IllegalArgumentException e) {
					e.printStackTrace();
				} catch (InvocationTargetException e) {
					e.printStackTrace();
				} catch (InstantiationException e) {
					e.printStackTrace();
				} catch (ClassNotFoundException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		}
	}

